describe('Expedition creation and run through', () => {
  before(() => {
    // @ts-ignore disable-line
    cy.cleanupIndexedDB()
      .visit('settings')
      .wait(1000)
      .selectAllExpansions()
      .visit('expeditions')
  })

  after(() => {
    // @ts-ignore disable-line
    cy.visit('settings')
      .wait(1000)
      // @ts-ignore disable-line
      .deselectAllExpansions()
      .cleanupIndexedDB()
  })

  it('an expedition can be created successfully', () => {
    cy.get('[data-test*=btn-start-expedition]').click()
    cy.get('[data-test=input-name]')
      .find('input')
      .type('Test-Expedition 1')
    cy.get('[data-test=input-seed]')
      .find('input')
      .type('TEST-SEED')
    cy.get('[data-test=btn-expedition-create]').click()
  })

  it('can run through the first battle', () => {
    cy.get('h2')
      .contains('Test-Expedition 1')
      .click()
    cy.get('[data-test="btn-battle"]')
      .eq(0)
      .click()
    cy.get('[data-test="btn-start-battle"]').click()
    cy.get('[data-test="btn-battle-lost"]').click()
    cy.get('[data-test="select-loss-reward"]').click()
    cy.get('[data-test="option-gem"]').click()
    cy.get('[data-test="btn-confirm-reward"]').click()
    cy.get('p')
      .contains('Breach Ore')
      .click()
    cy.get('[data-test="btn-continue"]').click()
    cy.get('[data-test="btn-start-battle"]').click()
    cy.get('[data-test="btn-battle-won"]').click()
    cy.get('p')
      .contains('Mentite Chunk')
      .click()
    cy.get('p')
      .contains('Riddle Sphere')
      .click()
    cy.get('p')
      .contains('Nerve Jab')
      .click()
    cy.get('[data-test="btn-unlock-next-battle"]').click()
  })

  it('can run through the second battle', () => {
    cy.get('[data-test="btn-battle"]')
      .eq(1)
      .click()
    cy.get('[data-test="btn-start-battle"]').click()
    cy.get('[data-test="btn-battle-won"]').click()
    cy.get('p')
      .contains('Drown in Flames')
      .click()
    cy.get('p')
      .contains('Mages Totem')
      .click()
    cy.get('p')
      .contains('Unrefined Blaststone')
      .click()
    cy.get('[data-test="btn-unlock-next-battle"]').click()
  })

  it('can run through the third battle', () => {
    cy.get('[data-test="btn-battle"]')
      .eq(2)
      .click()
    cy.get('[data-test="btn-start-battle"]').click()
    cy.get('[data-test="btn-battle-won"]').click()
    cy.get('p')
      .contains('Triplite Core')
      .click()
    cy.get('p')
      .contains('Polyphase Turbine')
      .click()
    cy.get('p')
      .contains('Planar Insight')
      .click()
    cy.get('[data-test="btn-unlock-next-battle"]').click()
  })

  it('can run through the last battle', () => {
    cy.get('[data-test="btn-battle"]')
      .eq(3)
      .click()
    cy.get('[data-test="btn-start-battle"]').click()
    cy.get('[data-test="btn-battle-won"]').click()
    cy.get('[data-test="modal__btn-close"]').click()
  })

  it('has correct final barracks', () => {
    cy.get('[data-test="btn-open-barracks"]').click()

    // Mages
    cy.get('[data-test="mage-tile"]')
      .eq(0)
      .find('h2')
      .contains('Adelheim')
      .should('be.visible')
    cy.get('[data-test="mage-tile"]')
      .eq(1)
      .find('h2')
      .contains('Reeve')
      .should('be.visible')
    cy.get('[data-test="mage-tile"]')
      .eq(2)
      .find('h2')
      .contains('Sahala')
      .should('be.visible')
    cy.get('[data-test="mage-tile"]')
      .eq(3)
      .find('h2')
      .contains('Nym')
      .should('be.visible')

    // Supply
    cy.get('[data-test="supply"]').click({ force: true })
    cy.get('p')
      .contains('Scoria Slag')
      .should('be.visible')
    cy.get('p')
      .contains('Burning Opal')
      .should('be.visible')
    cy.get('p')
      .contains('Bloodstone Jewel')
      .should('be.visible')
    cy.get('p')
      .contains('Geophage')
      .should('be.visible')
    cy.get('p')
      .contains('Vim Dynamo')
      .should('be.visible')
    cy.get('p')
      .contains('Fire Chakram')
      .should('be.visible')
    cy.get('p')
      .contains('Force Amplifier')
      .should('be.visible')
    cy.get('p')
      .contains('Convection Field')
      .should('be.visible')
    cy.get('p')
      .contains('Radiance')
      .should('be.visible')

    // Treasures
    cy.get('[data-test="treasure"]').click({ force: true })
    cy.get('p')
      .contains("Xaxo's Pyre")
      .should('be.visible')
    cy.get('p')
      .contains("Mist's Amethyst Paragon")
      .should('be.visible')
    cy.get('p')
      .contains("Gex's Shattered Geode")
      .should('be.visible')
    cy.get('p')
      .contains("Remnant's Void Shard")
      .should('be.visible')
    cy.get('p')
      .contains("Yan Magda's Illuminate")
      .should('be.visible')
    cy.get('p')
      .contains("Glutton's Tooth")
      .should('be.visible')
    cy.get('p')
      .contains('Edible Fungus Chunks')
      .should('be.visible')
    cy.get('p')
      .contains("Wraith's Essence")
      .should('be.visible')
    cy.get('p')
      .contains('Entwined Aether Strands')
      .scrollIntoView()
      .should('be.visible')
    cy.get('p')
      .contains('Purified Bangle')
      .should('be.visible')
    cy.get('p')
      .contains('Fanged Choker')
      .should('be.visible')
    cy.get('p')
      .contains('Flowing Mantle')
      .should('be.visible')
    cy.get('p')
      .contains('Precision Magnifier')
      .should('be.visible')

    // Upgraded basic nemesis cards
    cy.get('[data-test="upgraded-basic-nemesis-cards"]').click({ force: true })
    cy.get('p')
      .contains('Wreck')
      .should('be.visible')
    cy.get('p')
      .contains('Engulfing Madness')
      .should('be.visible')
    cy.get('p')
      .contains('Separate')
      .should('be.visible')
    cy.get('p')
      .contains('Sky Tremor')
      .should('be.visible')
    cy.get('p')
      .contains('Burialskulk')
      .should('be.visible')
    cy.get('p')
      .contains('Sacrifice')
      .should('be.visible')
    cy.get('p')
      .contains('Thunderous Tempest')
      .should('be.visible')
    cy.get('p')
      .contains('Furrow Of Destruction')
      .should('be.visible')
    cy.get('p')
      .contains('Marked')
      .scrollIntoView()
      .should('be.visible')
    cy.get('p')
      .contains('Ray Of Desolation')
      .should('be.visible')
    cy.get('p')
      .contains('Terrify')
      .should('be.visible')
    cy.get('p')
      .contains('Bane Commander')
      .should('be.visible')
    cy.get('p')
      .contains('Needle Doom')
      .should('be.visible')
    cy.get('p')
      .contains('Flash Of Decay')
      .should('be.visible')
    cy.get('p')
      .contains('Eradicate')
      .should('be.visible')

    // Banished
    cy.get('[data-test="banished-cards"]').click({ force: true })
    cy.get('p')
      .contains('Breach Ore')
      .should('be.visible')
    cy.get('p')
      .contains('Riddle Sphere')
      .should('be.visible')
    cy.get('p')
      .contains('Mentite Chunk')
      .should('be.visible')
    cy.get('p')
      .contains('Nerve Jab')
      .scrollIntoView()
      .should('be.visible')
    cy.get('p')
      .contains('Unrefined Blaststone')
      .should('be.visible')
    cy.get('p')
      .contains('Mages Totem')
      .should('be.visible')
    cy.get('p')
      .contains('Drown in Flames')
      .scrollIntoView()
      .should('be.visible')
    cy.get('p')
      .contains('Triplite Core')
      .should('be.visible')
    cy.get('p')
      .contains('Polyphase Turbine')
      .should('be.visible')
    cy.get('p')
      .contains('Planar Insight')
      .should('be.visible')
  })

  it('shows the correct data inside the overview', () => {
    cy.get('[data-test="modal__btn-close"]').click()
    cy.get('[data-test="backlink"]').click()

    cy.get('[data-test="info--expedition-finished"]')
      .find('span')
      .contains('Yes')
    cy.get('[data-test="info--score"]')
      .find('span')
      .contains('22')
    cy.get('[data-test="info--big-pocket"]')
      .find('span')
      .contains('No')
    cy.get('[data-test="info--seed"]')
      .find('span')
      .contains('TEST-SEED')
    cy.get('[data-test="info--expansions"]')
      .find('span')
      .contains('Aeons End')
      .contains('Buried Secrets')
      .contains('The Depths')
      .contains('Into The Wild')
      .contains('Legacy')
      .contains('The New Age')
      .contains('The Nameless')
      .contains('Outer Dark')
      .contains('Shattered Dreams')
      .contains('The Ancients')
      .contains('The Void')
      .contains('War Eternal')
      .contains('Promos')
  })
})
